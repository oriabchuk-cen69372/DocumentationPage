{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":null,"code":["func obtainNetworkedData(urlString: String) -> Future<Void> {","","    let promise = Promise<Void>","    ⋮","    \/\/ after some time","    promise.resolve()","    ⋮","    return promise","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cshub_test\/future\/resolve()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future\/resolve()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"helper function that resolves the previously created and returned "},{"type":"codeVoice","code":"Promise"},{"type":"text","text":" "},{"type":"text","text":"with a nil value"}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"resolve()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"()"}],"symbolKind":"method","externalID":"s:10CSHub_Test6FutureCAAytRszlE7resolveyyF","extendedModule":"CSHub_Test","modules":[{"name":"CSHub_Test"}]},"hierarchy":{"paths":[["doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test","doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future"]]},"references":{"doc://cz.csas.app.cshub.test/documentation/CSHub_Test/Future":{"role":"symbol","title":"Future","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Future"}],"abstract":[{"type":"codeVoice","code":"Future"},{"type":"text","text":" type representing "},{"type":"strong","inlineContent":[{"type":"text","text":"asynchronous return value of the function"}]},{"type":"text","text":" "},{"type":"text","text":"that can be observed later on in the future. returned type will be either success"},{"type":"text","text":" "},{"type":"text","text":"with a value "},{"type":"codeVoice","code":"T"},{"type":"text","text":" or failure with an error "},{"type":"codeVoice","code":"E"}],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Future"}],"url":"\/documentation\/cshub_test\/future"},"doc://cz.csas.app.cshub.test/documentation/CSHub_Test/Future/resolve()":{"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"resolve()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"helper function that resolves the previously created and returned "},{"type":"codeVoice","code":"Promise"},{"type":"text","text":" "},{"type":"text","text":"with a nil value"}],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future\/resolve()","kind":"symbol","type":"topic","url":"\/documentation\/cshub_test\/future\/resolve()"},"doc://cz.csas.app.cshub.test/documentation/CSHub_Test":{"role":"collection","title":"CSHub_Test","abstract":[],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test","kind":"symbol","type":"topic","url":"\/documentation\/cshub_test"}}}