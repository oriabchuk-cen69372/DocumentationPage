{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chained"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NextValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"closure"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10CSHub_Test6FutureC1Txmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future","preciseIdentifier":"s:10CSHub_Test6FutureC","text":"Future"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NextValue","preciseIdentifier":"s:10CSHub_Test6FutureC7chainedyACyqd__GAExclF9NextValueL_qd__mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future","preciseIdentifier":"s:10CSHub_Test6FutureC","text":"Future"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NextValue","preciseIdentifier":"s:10CSHub_Test6FutureC7chainedyACyqd__GAExclF9NextValueL_qd__mfp"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"new "},{"type":"codeVoice","code":"Future"}]}]},{"kind":"parameters","parameters":[{"name":"closure","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"that will take a "},{"type":"codeVoice","code":"Future"},{"type":"text","text":" and transform it"}]}]},{"name":"closure","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"that will take a "},{"type":"codeVoice","code":"Future"},{"type":"text","text":" and transform it"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":null,"code":["func obtainNetworkedData(urlString: String) -> Future<Data> {","⋮","}","","func decrypt(crypted data: Data) -> Future<Data> {","⋮","}","","func unzip(decrypted data: Data) -> Future<Data> {","⋮","}","","let unzippedData = obtainNetworkedData(urlString: \"http:\/\/…\")","                        .chained(decrypt)","                        .chained(unzip)"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the unzippedData value will be of type Future"},{"type":"text","text":" and still"},{"type":"text","text":" "},{"type":"text","text":"needs to be "},{"type":"codeVoice","code":"observed"},{"type":"text","text":" to determine if it is "},{"type":"codeVoice","code":"success"},{"type":"text","text":" or "},{"type":"codeVoice","code":"failure"}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" helper function allowing chaining of the futures"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cshub_test\/future\/chained(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future\/chained(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"helper function that allows chaining of the multiple "},{"type":"codeVoice","code":"Future"},{"type":"text","text":" types"},{"type":"text","text":" "},{"type":"text","text":"without the explicit need to check if it is "},{"type":"codeVoice","code":"success"},{"type":"text","text":" or "},{"type":"codeVoice","code":"failure"},{"type":"text","text":" during"},{"type":"text","text":" "},{"type":"text","text":"each step of the chain. multiple other frameworks use the name "},{"type":"codeVoice","code":"then"}],"kind":"symbol","metadata":{"role":"symbol","title":"chained(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chained"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NextValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10CSHub_Test6FutureC1Txmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:10CSHub_Test6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NextValue","preciseIdentifier":"s:10CSHub_Test6FutureC7chainedyACyqd__GAExclF9NextValueL_qd__mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:10CSHub_Test6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NextValue","preciseIdentifier":"s:10CSHub_Test6FutureC7chainedyACyqd__GAExclF9NextValueL_qd__mfp"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:10CSHub_Test6FutureC7chainedyACyqd__GAExclF","extendedModule":"CSHub_Test","modules":[{"name":"CSHub_Test"}]},"hierarchy":{"paths":[["doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test","doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future"]]},"references":{"doc://cz.csas.app.cshub.test/documentation/CSHub_Test/Future/chained(_:)":{"role":"symbol","title":"chained(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"chained"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NextValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10CSHub_Test6FutureC1Txmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:10CSHub_Test6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NextValue","preciseIdentifier":"s:10CSHub_Test6FutureC7chainedyACyqd__GAExclF9NextValueL_qd__mfp"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Future","preciseIdentifier":"s:10CSHub_Test6FutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NextValue","preciseIdentifier":"s:10CSHub_Test6FutureC7chainedyACyqd__GAExclF9NextValueL_qd__mfp"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"helper function that allows chaining of the multiple "},{"type":"codeVoice","code":"Future"},{"type":"text","text":" types"},{"type":"text","text":" "},{"type":"text","text":"without the explicit need to check if it is "},{"type":"codeVoice","code":"success"},{"type":"text","text":" or "},{"type":"codeVoice","code":"failure"},{"type":"text","text":" during"},{"type":"text","text":" "},{"type":"text","text":"each step of the chain. multiple other frameworks use the name "},{"type":"codeVoice","code":"then"}],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future\/chained(_:)","kind":"symbol","type":"topic","url":"\/documentation\/cshub_test\/future\/chained(_:)"},"doc://cz.csas.app.cshub.test/documentation/CSHub_Test":{"role":"collection","title":"CSHub_Test","abstract":[],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test","kind":"symbol","type":"topic","url":"\/documentation\/cshub_test"},"doc://cz.csas.app.cshub.test/documentation/CSHub_Test/Future":{"role":"symbol","title":"Future","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Future"}],"abstract":[{"type":"codeVoice","code":"Future"},{"type":"text","text":" type representing "},{"type":"strong","inlineContent":[{"type":"text","text":"asynchronous return value of the function"}]},{"type":"text","text":" "},{"type":"text","text":"that can be observed later on in the future. returned type will be either success"},{"type":"text","text":" "},{"type":"text","text":"with a value "},{"type":"codeVoice","code":"T"},{"type":"text","text":" or failure with an error "},{"type":"codeVoice","code":"E"}],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Future"}],"url":"\/documentation\/cshub_test\/future"}}}