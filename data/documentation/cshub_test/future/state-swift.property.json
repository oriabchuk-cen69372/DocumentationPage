{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future\/State-swift.enum","preciseIdentifier":"s:10CSHub_Test6FutureC5StateO","text":"State"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10CSHub_Test6FutureC1Txmfp"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/cshub_test\/future\/state-swift.property"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future\/state-swift.property","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"State"},{"type":"text","text":" of the "},{"type":"codeVoice","code":"Promise"},{"type":"text","text":". Initially a promise has a "},{"type":"codeVoice","code":"pending"},{"type":"text","text":" state."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10CSHub_Test6FutureC5StateO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10CSHub_Test6FutureC1Txmfp"},{"kind":"text","text":">"}],"title":"state","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:10CSHub_Test6FutureC5stateAC5StateOyx_xGvp","modules":[{"name":"CSHub_Test"}]},"hierarchy":{"paths":[["doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test","doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future"]]},"references":{"doc://cz.csas.app.cshub.test/documentation/CSHub_Test/Future/state-swift.property":{"role":"symbol","title":"state","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:10CSHub_Test6FutureC5StateO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10CSHub_Test6FutureC1Txmfp"},{"kind":"text","text":">"}],"abstract":[{"type":"codeVoice","code":"State"},{"type":"text","text":" of the "},{"type":"codeVoice","code":"Promise"},{"type":"text","text":". Initially a promise has a "},{"type":"codeVoice","code":"pending"},{"type":"text","text":" state."}],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future\/state-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/cshub_test\/future\/state-swift.property"},"doc://cz.csas.app.cshub.test/documentation/CSHub_Test":{"role":"collection","title":"CSHub_Test","abstract":[],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test","kind":"symbol","type":"topic","url":"\/documentation\/cshub_test"},"doc://cz.csas.app.cshub.test/documentation/CSHub_Test/Future/State-swift.enum":{"role":"symbol","title":"Future.State","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"abstract":[],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future\/State-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"State"}],"url":"\/documentation\/cshub_test\/future\/state-swift.enum"},"doc://cz.csas.app.cshub.test/documentation/CSHub_Test/Future":{"role":"symbol","title":"Future","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Future"}],"abstract":[{"type":"codeVoice","code":"Future"},{"type":"text","text":" type representing "},{"type":"strong","inlineContent":[{"type":"text","text":"asynchronous return value of the function"}]},{"type":"text","text":" "},{"type":"text","text":"that can be observed later on in the future. returned type will be either success"},{"type":"text","text":" "},{"type":"text","text":"with a value "},{"type":"codeVoice","code":"T"},{"type":"text","text":" or failure with an error "},{"type":"codeVoice","code":"E"}],"identifier":"doc:\/\/cz.csas.app.cshub.test\/documentation\/CSHub_Test\/Future","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Future"}],"url":"\/documentation\/cshub_test\/future"}}}